// Generated by CoffeeScript 1.4.0
(function() {
  var DateRange, addDays, cleanDate, getLastSunday, removeDays, removeWeeks,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  cleanDate = function(date) {
    var clean;
    clean = new Date(date);
    clean.setSeconds(0);
    clean.setMinutes(0);
    clean.setHours(0);
    return clean;
  };

  getLastSunday = function(date) {
    var sundayTimestamp;
    sundayTimestamp = date.getTime() - date.getDay() * 86400 * 1000;
    return new Date(sundayTimestamp);
  };

  removeWeeks = function(date, weeks) {
    var newDateTimestamp;
    if (weeks == null) {
      weeks = 1;
    }
    newDateTimestamp = date.getTime() - weeks * 7 * 86400 * 1000;
    return new Date(newDateTimestamp);
  };

  removeDays = function(date, days) {
    var newDateTimestamp;
    if (days == null) {
      days = 1;
    }
    newDateTimestamp = date.getTime() - days * 86400 * 1000;
    return new Date(newDateTimestamp);
  };

  addDays = function(date, days) {
    if (days == null) {
      days = 1;
    }
    return removeDays(date, -days);
  };

  DateRange = (function() {

    function DateRange(options, fn) {
      this.options = options != null ? options : {};
      if (fn == null) {
        fn = null;
      }
      this.toArray = __bind(this.toArray, this);

      this.getDay = __bind(this.getDay, this);

      this.now = this.options.now || new Date();
      this.length = 51 * 7;
      this.clean = cleanDate(this.now);
      this.isCurrentWeekComplete = this.now.getDay() === 6;
      this.currentLastSunday = getLastSunday(this.now);
      this.first = removeWeeks(this.currentLastSunday, 51 - this.isCurrentWeekComplete);
      this.last = removeDays(this.currentLastSunday, 1);
      if (fn) {
        fn(false, this);
      }
      return this;
    }

    DateRange.prototype.getDay = function(i) {
      return addDays(this.first, i);
    };

    DateRange.prototype.toArray = function() {
      var i;
      return [
        (function() {
          var _i, _ref, _results;
          _results = [];
          for (i = _i = 0, _ref = this.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            _results.push(this.getDay(i));
          }
          return _results;
        }).call(this)
      ][0];
    };

    return DateRange;

  })();

  module.exports = {
    DateRange: DateRange,
    cleanDate: cleanDate,
    getLastSunday: getLastSunday,
    removeWeeks: removeWeeks,
    removeDays: removeDays,
    addDays: addDays
  };

}).call(this);
